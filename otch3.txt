Процессы в ОС GNU/Linux
Каждый процесс имеет свой собственный идентификатор.
Получить значение идентификатора процесса можно при помощи системного вызова getpid()
Идентификатор родительского процесса возвращается системным вызовом getppid()

Программа, выводящая на экран идентификаторы текущего и родительско процессов:

#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>
#include <stdlib.h>
int main() {
        pid_t prid, parentprid;
        prid = getpid();
        parentprid = getppid();
        printf("Ид. текущего процесса: %d\nИд. родительского процесса: %d\n", prid, parentprid);
        return 0;
}

mikhailova@alexandr-Aspire-Z5751:~/OS_25$ ps
    PID TTY          TIME CMD
  13055 pts/7    00:00:00 bash
  13754 pts/7    00:00:00 ps
mikhailova@alexandr-Aspire-Z5751:~/OS_25$ vim pr003.c
mikhailova@alexandr-Aspire-Z5751:~/OS_25$ mikhailova@alexandr-Aspire-Z5751:~/OS_25$ gcc pr003.c -o pr003.out
mikhailova@alexandr-Aspire-Z5751:~/OS_25$ ./pr003.out
Ид. текущего процесса: 14292
Ид. родительского процесса: 13055

Родительским процессом для запущенной программы является командная оболочка bash, поэтому её id совпадает с id родительского процесса

mikhailova@alexandr-Aspire-Z5751:~/OS_25$ mikhailova@alexandr-Aspire-Z5751:~/OS_25$ ./pr003.out
Ид. текущего процесса: 14727
Ид. родительского процесса: 13055
После второго запуска программы меняется id текущего процесса, так как предыдущий процесс уже завершился
